# Supabase Configuration
# Replace these placeholder values with your actual Supabase project credentials
# You can find these in your Supabase project dashboard under Settings > API

VITE_SUPABASE_URL=https://your-project-id.supabase.co
VITE_SUPABASE_ANON_KEY=your-anon-key-here

# Stripe Payment Gateway Configuration
# Get these from your Stripe Dashboard: https://dashboard.stripe.com/apikeys
VITE_STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key_here
VITE_STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here

# Razorpay Payment Gateway Configuration
# Get these from your Razorpay Dashboard: https://dashboard.razorpay.com/app/keys
VITE_RAZORPAY_KEY_ID=rzp_test_your_razorpay_key_id_here
VITE_RAZORPAY_KEY_SECRET=your_razorpay_key_secret_here

# Optional: Enable mock data for development when Supabase is not configured
# VITE_USE_MOCK_DATA=true

# Instructions:
# 1. Copy this file to .env
# 2. Replace the placeholder values with your actual credentials
# 3. If you don't have Supabase set up yet, the app will use mock data automatically
# 4. To set up Supabase:
#    - Go to https://supabase.com
#    - Create a new project
#    - Go to Settings > API
#    - Copy the URL and anon key
#    - Run the SQL schema from supabase/schema.sql in your Supabase SQL editor
# 5. To set up Stripe:
#    - Go to https://stripe.com
#    - Create an account
#    - Go to Developers > API keys
#    - Copy the publishable key and secret key
#    - Use test keys for development
# 6. To set up Razorpay:
#    - Go to https://razorpay.com
#    - Create an account
#    - Go to Settings > API Keys
#    - Copy the key ID and key secret
#    - Use test keys for development

# Payment Gateway Setup Notes:
# - For production, use live keys instead of test keys
# - Keep your secret keys secure and never expose them in client-side code
# - The secret keys should only be used in your backend API
# - The publishable keys are safe to use in the frontend 